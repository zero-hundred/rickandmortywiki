import { useState, useEffect } from 'react';
import Head from 'next/head';
import Card from './components/card/Card';
import Search from './components/form/Search';
import MoreResults from './components/buttons/MoreResults';

const defaultEndpoint = "https://rickandmortyapi.com/api/character";

export async function getServerSideProps() {
  const resp = await fetch(defaultEndpoint);
  const data = await resp.json();
  return {
    props: {
      data
    }
  }
}

export default function Home({ data }) {
  const {info, results: initResults = []} = data;
  const [results, updateResults] = useState(initResults);
  const [page, updatePage] = useState({
    ...info,
    current: defaultEndpoint
  })
  const { current } = page;

  useEffect(() => {
    if(current === defaultEndpoint) return;

    async function request() {
      const res = await fetch(current);
      const newData = await res.json();

      updatePage({
        current,
        ...newData.info
      });

      if( !newData.info?.prev ) {
        updateResults(newData.results);
        return;
      };

      updateResults(prev => {
        return [
          ...prev,
          ...newData.results
        ]
      });
    }

    request();

  }, [current]);

  const onMoreResults = () => {
    updatePage(prev => {
      return {
        ...prev,
        current: page?.next
      }
    })
  }
  const handleSubmit = (e) => {
    e.preventDefault();

    // Form
    const { currentTarget = {}} = e;
    // Elements
    const fields = Array.from(currentTarget?.elements);
    // Query input
    const fieldQuery = fields.find(field => field.name === 'query');
    // Assigns value if there is one
    const value = fieldQuery.value || '';
    const endpoint = `https://rickandmortyapi.com/api/character/?name=${value}`;

    updatePage({
      current: endpoint
    })
  }
  return (
    <div>
      <Head>
        <title>Existence is Pain</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={`app`}>
        <h1 className={`txt_36 gradient-txt txt_center`}>Existence is Pain</h1>

        <Search handleSubmit={handleSubmit} />

        <ul className={`grid auto-fit results`}>
          {results.map(result => {
            const { id, name, image } = result;
            return (<Card id={id} key={id} name={name} image={image} />)
          })}
        </ul>

        <p>
          <MoreResults onMoreResults={onMoreResults} />
        </p>
      </main>
    </div>
  )
}

// className={styles.container}